// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieAPI.Data;

#nullable disable

namespace MovieAPI.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20230914103009_initDbBlazor")]
    partial class initDbBlazor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("MovieAPI.Domain.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Tom",
                            LastName = "Cruise"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Miles",
                            LastName = "Teller"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Bruce",
                            LastName = "Willis"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Damon",
                            LastName = "Wayans"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Dustin",
                            LastName = "Hoffman"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Lee",
                            LastName = "Van Cleef"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Eli",
                            LastName = "Wallach"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Sigourney",
                            LastName = "Weaver"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Tom",
                            LastName = "Skerritt"
                        });
                });

            modelBuilder.Entity("MovieAPI.Domain.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Joseph",
                            LastName = "Kosinski"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Tony",
                            LastName = "Scott"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Barry",
                            LastName = "Levinson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Sergio",
                            LastName = "Leone"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Ridley",
                            LastName = "Scott"
                        });
                });

            modelBuilder.Entity("MovieAPI.Domain.Genres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Science-Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Western"
                        },
                        new
                        {
                            Id = 6,
                            Genre = "Thriller"
                        });
                });

            modelBuilder.Entity("MovieAPI.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 1,
                            Duration = "2h 10m",
                            GenreId = 1,
                            ReleaseYear = 2022,
                            Title = "Top Gun : Maverick",
                            TrailerPath = "https://www.youtube.com/embed/giXco2jaZ_4?si=bhuGz4-cg-ka5dqa"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 2,
                            Duration = "1h 45m",
                            GenreId = 1,
                            ReleaseYear = 1991,
                            Title = "The Last Boy Scout",
                            TrailerPath = "https://www.youtube.com/embed/NPO-Z6mEYW4?si=LAxOH9CVyWYpFjMX"
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = 3,
                            Duration = "2h 13m",
                            GenreId = 4,
                            ReleaseYear = 1988,
                            Title = "Rain Man",
                            TrailerPath = "https://www.youtube.com/embed/mlNwXuHUA8I?si=Ho7AiWBMwWx2HpO6"
                        },
                        new
                        {
                            Id = 4,
                            DirectorId = 4,
                            Duration = "2h 58m",
                            GenreId = 5,
                            ReleaseYear = 1966,
                            Title = "The Good, the Bad and the Ugly",
                            TrailerPath = "https://www.youtube.com/embed/IFNUGzCOQoI?si=a96JJzg1QCRcJrK5"
                        },
                        new
                        {
                            Id = 5,
                            DirectorId = 5,
                            Duration = "1h 57m",
                            GenreId = 3,
                            ReleaseYear = 1979,
                            Title = "Alien",
                            TrailerPath = "https://www.youtube.com/embed/jQ5lPt9edzQ?si=caTNcXcqcHE2p1d-"
                        },
                        new
                        {
                            Id = 6,
                            DirectorId = 4,
                            Duration = "2h 12m",
                            GenreId = 5,
                            ReleaseYear = 1965,
                            Title = "For a Few Dollar More",
                            TrailerPath = "https://www.youtube.com/embed/bNt9NcLteoU?si=U6ZFghGM58QWbfD9"
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("MovieAPI.Domain.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieAPI.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieAPI.Domain.Movie", b =>
                {
                    b.HasOne("MovieAPI.Domain.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieAPI.Domain.Genres", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MovieAPI.Domain.Director", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
